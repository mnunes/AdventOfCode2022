(opponent == "rock"     & myself == "scissors") ~ 1, # 1 + 0,
(opponent == "paper"    & myself == "rock"    ) ~ 2, # 2 + 0,
(opponent == "paper"    & myself == "paper"   ) ~ 5, # 2 + 3,
(opponent == "paper"    & myself == "scissors") ~ 8, # 2 + 6,
(opponent == "scissors" & myself == "rock"    ) ~ 9, # 3 + 6,
(opponent == "scissors" & myself == "paper"   ) ~ 3, # 3 + 0,
(opponent == "scissors" & myself == "scissors") ~ 6  # 3 + 3
)
)
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 7, # 1 + 6,
opponent == "rock"     & myself == "scissors" ~ 1, # 1 + 0,
opponent == "paper"    & myself == "rock"     ~ 2, # 2 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 8, # 2 + 6,
opponent == "scissors" & myself == "rock"     ~ 9, # 3 + 6,
opponent == "scissors" & myself == "paper"    ~ 3, # 3 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
dados$pontos
sum(dados$pontos)
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 7, # 2 + 6,
opponent == "rock"     & myself == "scissors" ~ 1, # 3 + 0,
opponent == "paper"    & myself == "rock"     ~ 2, # 1 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 8, # 3 + 6,
opponent == "scissors" & myself == "rock"     ~ 9, # 1 + 6,
opponent == "scissors" & myself == "paper"    ~ 3, # 3 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
sum(dados$pontos)
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 8, # 2 + 6,
opponent == "rock"     & myself == "scissors" ~ 3, # 3 + 0,
opponent == "paper"    & myself == "rock"     ~ 1, # 1 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 9, # 3 + 6,
opponent == "scissors" & myself == "rock"     ~ 7, # 1 + 6,
opponent == "scissors" & myself == "paper"    ~ 3, # 3 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
sum(dados$pontos)
dados <- data.frame(opponent = c("A", "B", "C"),
myself = c("X", "Y", "Z"))
dados <-
dados |>
mutate(opponent = case_when(
opponent == "A" ~ "rock",
opponent == "B" ~ "paper",
opponent == "C" ~ "scissors"
)) |>
mutate(myself = case_when(
myself == "X" ~ "rock",
myself == "Y" ~ "paper",
myself == "Z" ~ "scissors"
))
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 8, # 2 + 6,
opponent == "rock"     & myself == "scissors" ~ 3, # 3 + 0,
opponent == "paper"    & myself == "rock"     ~ 1, # 1 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 9, # 3 + 6,
opponent == "scissors" & myself == "rock"     ~ 7, # 1 + 6,
opponent == "scissors" & myself == "paper"    ~ 3, # 3 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
sum(dados$pontos)
library(tidyverse)
dados <- read.table(file = "Puzzle02/data.dat", sep = " ")
colnames(dados) <- c("opponent", "myself")
dados <-
dados |>
mutate(opponent = case_when(
opponent == "A" ~ "rock",
opponent == "B" ~ "paper",
opponent == "C" ~ "scissors"
)) |>
mutate(myself = case_when(
myself == "X" ~ "rock",
myself == "Y" ~ "paper",
myself == "Z" ~ "scissors"
))
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 8, # 2 + 6,
opponent == "rock"     & myself == "scissors" ~ 3, # 3 + 0,
opponent == "paper"    & myself == "rock"     ~ 1, # 1 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 9, # 3 + 6,
opponent == "scissors" & myself == "rock"     ~ 7, # 1 + 6,
opponent == "scissors" & myself == "paper"    ~ 3, # 3 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
sum(dados$pontos)
library(tidyverse)
dados <- read.table(file = "Puzzle02/data.dat", sep = " ")
colnames(dados) <- c("opponent", "myself")
dados <-
dados |>
mutate(opponent = case_when(
opponent == "A" ~ "rock",
opponent == "B" ~ "paper",
opponent == "C" ~ "scissors"
)) |>
mutate(myself = case_when(
myself == "X" ~ "rock",
myself == "Y" ~ "paper",
myself == "Z" ~ "scissors"
))
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 8, # 2 + 6,
opponent == "rock"     & myself == "scissors" ~ 3, # 3 + 0,
opponent == "paper"    & myself == "rock"     ~ 1, # 1 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 9, # 3 + 6,
opponent == "scissors" & myself == "rock"     ~ 7, # 1 + 6,
opponent == "scissors" & myself == "paper"    ~ 3, # 3 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
sum(dados$pontos)
install.packages(c("infer", "jpeg", "png", "stringr"))
library(tidyverse)
dados <- read.table(file = "Puzzle02/data.dat", sep = " ")
colnames(dados) <- c("opponent", "myself")
dados <-
dados |>
mutate(opponent = case_when(
opponent == "A" ~ "rock",
opponent == "B" ~ "paper",
opponent == "C" ~ "scissors"
)) |>
mutate(myself = case_when(
myself == "X" ~ "rock",
myself == "Y" ~ "paper",
myself == "Z" ~ "scissors"
))
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "rock"     ~ 4, # 1 + 3,
opponent == "rock"     & myself == "paper"    ~ 8, # 2 + 6,
opponent == "rock"     & myself == "scissors" ~ 3, # 3 + 0,
opponent == "paper"    & myself == "rock"     ~ 1, # 1 + 0,
opponent == "paper"    & myself == "paper"    ~ 5, # 2 + 3,
opponent == "paper"    & myself == "scissors" ~ 9, # 3 + 6,
opponent == "scissors" & myself == "rock"     ~ 7, # 1 + 6,
opponent == "scissors" & myself == "paper"    ~ 2, # 2 + 0,
opponent == "scissors" & myself == "scissors" ~ 6  # 3 + 3
)
)
sum(dados$pontos)
dados <- read.table(file = "Puzzle02/data.dat", sep = " ")
colnames(dados) <- c("opponent", "myself")
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "lose" ~ 3, # 3 + 0,
opponent == "rock"     & myself == "draw" ~ 4, # 1 + 3,
opponent == "rock"     & myself == "win"  ~ 8, # 2 + 6,
opponent == "paper"    & myself == "lose" ~ 1, # 1 + 0,
opponent == "paper"    & myself == "draw" ~ 5, # 2 + 3,
opponent == "paper"    & myself == "win"  ~ 9, # 3 + 6,
opponent == "scissors" & myself == "lose" ~ 2, # 2 + 0,
opponent == "scissors" & myself == "draw" ~ 6, # 3 + 3,
opponent == "scissors" & myself == "win"  ~ 7  # 1 + 6
)
)
sum(dados$pontos)
dados <- read.table(file = "Puzzle02/data.dat", sep = " ")
colnames(dados) <- c("opponent", "myself")
dados <-
dados |>
mutate(opponent = case_when(
opponent == "A" ~ "rock",
opponent == "B" ~ "paper",
opponent == "C" ~ "scissors"
)) |>
mutate(myself = case_when(
myself == "X" ~ "lose",
myself == "Y" ~ "draw",
myself == "Z" ~ "win"
))
dados
dados <-
dados |>
mutate(pontos = case_when(
opponent == "rock"     & myself == "lose" ~ 3, # 3 + 0,
opponent == "rock"     & myself == "draw" ~ 4, # 1 + 3,
opponent == "rock"     & myself == "win"  ~ 8, # 2 + 6,
opponent == "paper"    & myself == "lose" ~ 1, # 1 + 0,
opponent == "paper"    & myself == "draw" ~ 5, # 2 + 3,
opponent == "paper"    & myself == "win"  ~ 9, # 3 + 6,
opponent == "scissors" & myself == "lose" ~ 2, # 2 + 0,
opponent == "scissors" & myself == "draw" ~ 6, # 3 + 3,
opponent == "scissors" & myself == "win"  ~ 7  # 1 + 6
)
)
dados
sum(dados$pontos)
x1 <- "vJrwpWtwJgWrhcsFMMfFFhFp"
x2 <- "jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL"
x3 <- "PmmdzqPrVvPwwTWBwg"
x4 <- "wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn"
x5 <- "ttgJtRGJQctTZtZT"
x6 <- "CrZsJsPPZsGzwwsLwLmpwMDw"
?split
?strsplit
x1[1:3]
lrngth(x1)
length(x1)
nchar(x1)
substr(x, 1, n/2)
rucksack <- function(x){
n <- nchar(x)
return(c(substr(x, 1, n/2), substr(x, n/2+1, n)))
}
rucksack(x1)
x <- "vJrwpWtwJgWr"
strsplit(x)
strsplit(x, "")
unlist(strsplit(x, ""))
strings <- unlist(strsplit(x, ""))
x
x <- "vJrwpWtwJgWrhcsFMMfFFhFp"
n <- nchar(x)
h1 <- substr(x, 1, n/2)
h2 <- substr(x, n/2+1, n)
strings <- unlist(strsplit(h1, ""))
strings
strings == h2
?break()
rucksack <- function(x){
n <- nchar(x)
h1 <- substr(x, 1, n/2)
h2 <- substr(x, n/2+1, n)
char_h1 <- unlist(strsplit(h1, ""))
char_h2 <- unlist(strsplit(h2, ""))
for (i in char_h1){
for (j in char_h2){
if (i == j){
item <- i
}
}
}
return(item)
}
rucksack(x1)
rucksack(x2
)
setwd("~/Documents/Research/github/AdventOfCode2022")
dados <- read.csv(file = "Puzzle03/data/dados.csv")
apply(dados, 2, rucksck)
apply(dados, 2, rucksack)
x1 <- "vJrwpWtwJgWrhcsFMMfFFhFp"
x2 <- "jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL"
x3 <- "PmmdzqPrVvPwwTWBwg"
x4 <- "wMqvLMZHhHMvwLHjbvcjnnSBnvTQFn"
x5 <- "ttgJtRGJQctTZtZT"
x6 <- "CrZsJsPPZsGzwwsLwLmpwMDw"
rucksack <- function(x){
n <- nchar(x)
h1 <- substr(x, 1, n/2)
h2 <- substr(x, n/2+1, n)
char_h1 <- unlist(strsplit(h1, ""))
char_h2 <- unlist(strsplit(h2, ""))
for (i in char_h1){
for (j in char_h2){
if (i == j){
item <- i
}
}
}
return(item)
}
dados <- read.csv(file = "Puzzle03/data/dados.csv")
apply(dados, 1, rucksack)
letras <- apply(dados, 1, rucksack)
letras <- factor(letras, levels = c(letters, LETTERS))
sum(letras)
sum(as.numeric(letras))
letras
dados <- read.csv(file = "Puzzle03/data/dados.csv")
dado[1, ]
dados[1, ]
dados <- read.table(file = "Puzzle03/data/dados.csv", header = FALSE)
letras <- apply(dados, 1, rucksack)
letras <- factor(letras, levels = c(letters, LETTERS))
sum(as.numeric(letras))
dim(dados)
x1 <- "vJrwpWtwJgWrhcsFMMfFFhFp"
x2 <- "jqHRNqRjqzjGDLGLrsFMfFZSrLrFZsSL"
x3 <- "PmmdzqPrVvPwwTWBwg"
merge(as.data.frame(table(strsplit(x1, ""))),
as.data.frame(table(strsplit(x2, ""))),
as.data.frame(table(strsplit(x3, ""))),
by = 1)
as.data.frame(table(strsplit(x1, "")))
as.data.frame(strsplit(x1, ""))
merge(as.data.frame(strsplit(x1, "")),
as.data.frame(strsplit(x2, "")),
as.data.frame(strsplit(x3, "")),
by = 1)
strsplit(x1, "")
merge(unlist(strsplit(x1, "")),
unlist(strsplit(x2, "")),
unlist(strsplit(x3, "")),
by = 1)
unlist(strsplit(x1, ""))
intersect(unlist(strsplit(x1, "")), unlist(strsplit(x2, "")))
common <- function(x1, x2, x3){
intersect(
intersect(unlist(strsplit(x1, "")), unlist(strsplit(x2, ""))),
intersect(unlist(strsplit(x3, "")))
)
}
common(x1, x2, x3)
common <- function(x1, x2, x3){
intersect(
intersect(unlist(strsplit(x1, "")),
unlist(strsplit(x2, ""))),
unlist(strsplit(x3, ""))
)
}
common(x1, x2, x3)
for (j in 1:nrow(dados)/3){
result[j] <-
common(dados[j*3-2, ],
dados[j*3-1, ],
dados[j*3, ])
}
result <- 0
for (j in 1:nrow(dados)/3){
result[j] <-
common(dados[j*3-2, ],
dados[j*3-1, ],
dados[j*3, ])
}
warnings()
j
for (j in 1:(nrow(dados)/3)){
result[j] <-
common(dados[j*3-2, ],
dados[j*3-1, ],
dados[j*3, ])
}
result <- 0
for (j in 1:(nrow(dados)/3)){
result[j] <-
common(dados[j*3-2, ],
dados[j*3-1, ],
dados[j*3, ])
}
result <- factor(result, levels = c(letters, LETTERS))
sum(as.numeric(result))
library(tidyverse)
setwd("~/Documents/Research/github/AdventOfCode2022/Puzzle04")
dados <- read.csv(file = "data/input.dat")
dados
dados |>
mutate(elf_1_1 = strsplit(elf_1, split = "-")[1])
dados |>
mutate(elf_1_1 = strsplit(elf_1, split = "-")[[1]])
strsplit(dados$elf_1, split = "-")
split_ <- function(x){
return(unlist(strsplit(x, split = "-")))
}
split_(dados$elf_1)
split_ <- function(x, p = 1){
return(
unlist(strsplit(x, split = "-"))[seq(p, length(x), 2)]
)
}
split_(dados$elf_1, ``)
split_(dados$elf_1, 1)
dados$elf_1
split_ <- function(x, p = 1){
return(
as.numeric(unlist(strsplit(x, split = "-"))[seq(p, length(x), 2)])
)
}
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2))
dados <- read.csv(file = "data/input.dat")
split_ <- function(x, p = 1){
return(
as.numeric(unlist(strsplit(x, split = "-"))[seq(p, length(x), 2)])
)
}
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2))
dados
split_(dados$elf_1, 1)
dados$elf_1
split_(dados$elf_1, 1)
split_ <- function(x, p = 1){
return(
as.numeric(unlist(strsplit(x, split = "-"))[seq(p, 2*length(x), 2)])
)
}
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2))
(elf_1_1 <= elf_2_1 & elf_1_2 >= elf_2_2) || (elf_2_1 <= elf_1_1 & elf_2_2 >= elf_1_2), 1, 0)
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(contem = ifelse( (elf_1_1 <= elf_2_1 & elf_1_2 >= elf_2_2) || (elf_2_1 <= elf_1_1 & elf_2_2 >= elf_1_2), 1, 0) )
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(contem = ifelse( (elf_1_1 <= elf_2_1 & elf_1_2 >= elf_2_2), 1, 0) )
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(contem = ifelse( (elf_1_1 <= elf_2_1 & elf_1_2 >= elf_2_2) | (elf_2_1 <= elf_1_1 & elf_2_2 >= elf_1_2), 1, 0) )
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(contem = ifelse( (elf_1_1 <= elf_2_1 & elf_1_2 >= elf_2_2) | (elf_2_1 <= elf_1_1 & elf_2_2 >= elf_1_2), 1, 0) ) |>
summarise(n = sum(contem))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(contem = ifelse( (elf_2_1 >= elf_1_2), 1, 0) ) |>
summarise(n = sum(contem))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(contem = ifelse( (elf_1_2 >= elf_2_1) | (elf_1_1 >= elf_2_1), 1, 0) ) |>
summarise(n = sum(contem))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(nao_contem = ifelse( (elf_1_2 < elf_2_1 ) | (elf_2_2 < elf_1_1 ), 1, 0) ) |>
summarise(n = sum(contem))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(nao_contem = ifelse( (elf_1_2 < elf_2_1 ) | (elf_2_2 < elf_1_1 ), 1, 0) ) |>
summarise(n = sum(nao_contem))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(nao_contem = ifelse( (elf_1_2 < elf_2_1 ) | (elf_2_2 < elf_1_1 ), 1, 0) ) |>
summarise(n = nrom(dados)-sum(nao_contem))
dados |>
mutate(elf_1_1 = split_(elf_1, 1),
elf_1_2 = split_(elf_1, 2),
elf_2_1 = split_(elf_2, 1),
elf_2_2 = split_(elf_2, 2)) |>
mutate(nao_contem = ifelse( (elf_1_2 < elf_2_1 ) | (elf_2_2 < elf_1_1 ), 1, 0) ) |>
summarise(n = nrow(dados)-sum(nao_contem))
